import java.util.Scanner;

public class Possible2DArrayTraversalFromStartToEnd {

    public static void main(String[] args){

        Scanner sc = new Scanner(System.in);
        System.out.println("Number of rows in 2D array matrix : ");
        int noOfRows = sc.nextInt();
        System.out.println("Number of columns in 2D array matrix : ");
        int noOfColumns = sc.nextInt();

        int[][] arraySetUp = new int[noOfRows][noOfColumns]; //int[][] array would get initialized with 0 in every element position

        possible2DArrayTraversalFromStartToEndSetUp(arraySetUp);

        System.out.println("The number of ways of starting at the top-left corner and getting to the bottom-right corner of the given " + noOfRows + " X " + noOfColumns + " array is - " + arraySetUp[noOfRows-1][noOfColumns-1]);

    }

    static void possible2DArrayTraversalFromStartToEndSetUp(int[][] arraySetUp){
        for(int i = 0; i<arraySetUp.length; i++ )
            for(int j = 0; j<arraySetUp[0].length; j++ ) {
                if(i==0 && j==0)
                    arraySetUp[i][j] = 0;
                else if((i==0 && j!=0) || (i!=0 && j==0))
                    arraySetUp[i][j] = 1;
                else
                    arraySetUp[i][j] = arraySetUp[i - 1][j] + arraySetUp[i][j - 1];
            }
    }
}
