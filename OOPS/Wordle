import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public class Wordle
{
    public static final String ANSI_RESET = "\u001B[0m";
    public static final String ANSI_GREEN = "\u001B[32m";
    public static final String ANSI_YELLOW = "\u001B[33m";
public static void main(String[] args)
{
    Scanner sc = new Scanner(System.in);
    System.out.println("Welcome to Wordle. \nGuess the correct word in 6 guesses");
    System.out.println("The matching letter in the correct position will be denoted in Green");
    System.out.println("The matching letter in the wrong position will be denoted in Yellow");
    System.out.println("The unmatched letter will be displayed as is");
    //System.out.println(ANSI_RESET + "6" + ANSI_GREEN + ANSI_YELLOW);

    WordList wl = new WordList();

    //creating a wordlist object with word objects using parameterized constructor

    //ArrayList<Word> arrBookList = new ArrayList<Word>();
    //add Word Objects to Array List and then call the constructor
    //WordList wl = new WordList(arrBookList);

    //using setWordList method to create a word list - create an object and use set method(by passing an arraylist of word objects to set the book list
    //ArrayList<Word> arrBookList = new ArrayList<Word>();
    //WordList wl1 = new WordList();
    //add Word Objects to Array List and then call the set method
    //wl1.setWordList(arrBookList);

    Random randomChoice = new Random();
    //int index = (int)(Math.random() * wl.getWordList().size());
    int index = randomChoice.nextInt(wl.getWordList().size());
    //String correctWord = wl.getWordList().get(index).word.toLowerCase(); //directly accessing word field
    String correctWord = wl.getWordList().get(index).getWord().toLowerCase(); //accessing word field using get method

    for(int i = 1; i<= 6; i++) {
        System.out.print("Guess " + i + " : ");
        Word guessWord = new Word(sc.nextLine().toLowerCase());

        if (guessWord.wordLength != 5 || guessWord.getWord() == null || guessWord.getWord().equals("") || !guessWord.getWord().matches("^[a-zA-Z]*$"))
        {
            System.out.println("Enter a valid 5 letter word - of only alphabets with no spaces"); i--;
        }
        else if (checkMatching(correctWord, guessWord.word)) break;

        if(i==6)
        {
            System.out.println("Max 6 guesses only! \nThe correct word is '" + correctWord + "' \nBetter luck next time.");
        }
    }
}

    static boolean checkMatching(String correctWord, String guessWord)
    {
        if(guessWord.equals(correctWord))
        { System.out.println("Congrats! You have guessed it right!!"); return true;}
        else
        {
            checkLetterPositions(correctWord, guessWord);
            return false;
        }
   }

    static void checkLetterPositions(String correctWord, String guessWord)
    {
        StringBuilder b = new StringBuilder();
        for (int i = 0; i < correctWord.length(); i++)
        {
            if (correctWord.charAt(i) == guessWord.charAt(i))
                b.append(ANSI_GREEN + guessWord.charAt(i) + ANSI_RESET);
            else if (correctWord.contains(Character.toString(guessWord.charAt(i))))
                b.append(ANSI_YELLOW + guessWord.charAt(i) + ANSI_RESET);
            else
                b.append(guessWord.charAt(i));
        }
        System.out.println(b);
    }

}
class WordList
{
    private ArrayList<Word> wordList = new ArrayList<Word>();

    public ArrayList<Word> getWordList()
    {
        return wordList;
    }

    WordList()  //WordList no arg constructor to set a default wordlist
    {
        Word word1 = new Word("Words");
        Word word2 = new Word("bring");
        Word word3 = new Word("grEaT");
        Word word4 = new Word("JOLLY");
        Word word5 = new Word("SoLvE");
        Word word6 = new Word("Giant");

        ArrayList<Word> arrWordList = new ArrayList<Word>();
        arrWordList.add(word1);
        arrWordList.add(word2);
        arrWordList.add(word3);
        arrWordList.add(word4);
        arrWordList.add(word5);
        arrWordList.add(word6);

        wordList.addAll(arrWordList);
   }

    WordList(ArrayList<Word> arrWordList) //WordList parameterized constructor with arraylist of words as input
    {
        wordList.addAll(arrWordList);
    }

    public void setWordList(ArrayList<Word> arrWordList) //can set data in a wordlist by passing an array list of words
    {
        wordList.addAll(arrWordList);
    }
}
class Word
{
    String word;
    int wordLength;

    Word(String word)
    {
        this.word = word;
        this.wordLength = this.word.length();
    }

    public void setWord(String word)
    {
        this.word = word;
    }

    public String getWord()
    {
        return word;
    }

    public void setWordLength() {
        this.wordLength = this.word.length();
    }
}
