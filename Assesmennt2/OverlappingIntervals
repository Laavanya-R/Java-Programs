import java.util.HashMap;
import java.util.Map;

public class OverlappingIntervals {
    public static void main(String[] arg) {


        HashMap<Integer, Integer> intervals = new HashMap<>();
        intervals.put(1, 3);
        intervals.put(5, 10);
        intervals.put(4, 10);
        intervals.put(13, 18);
        intervals.put(12, 19);
        intervals.put(20, 25);
        HashMap<Integer, Integer> intervalsWithoutOverlap = new HashMap<>();


        for (Map.Entry<Integer, Integer> entry : intervals.entrySet()) {
            Integer intervalStart = entry.getKey();
            Integer intervalEnd = entry.getValue();

            Integer inclusiveStart = 0;
            Integer inclusiveEnd = 0;

            if(!intervalsWithoutOverlap.containsKey(intervalStart)) {

                for (Map.Entry<Integer, Integer> entry1 : intervals.entrySet()) {
                    Integer intervalStart1 = entry1.getKey();
                    Integer intervalEnd1 = entry1.getValue();

                    if (intervalStart1 <= intervalStart && intervalEnd1 >= intervalEnd) {
                        inclusiveStart = intervalStart1;
                        inclusiveEnd = intervalEnd1;
                    }
                    else {
                        inclusiveStart = intervalStart;
                        inclusiveEnd = intervalEnd;
                    }
                }
                intervalsWithoutOverlap.put(inclusiveStart, inclusiveEnd);
            }
            //System.out.println(inclusiveStart + "-" + inclusiveEnd);
        }
        System.out.println(intervalsWithoutOverlap);
    }
}
